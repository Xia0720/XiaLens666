"""add is_private to Photo

Revision ID: 0c5554f44870
Revises: 427a297ecb76
Create Date: 2025-09-07 15:42:28.169123

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0c5554f44870'
down_revision = '427a297ecb76'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('stories')
    op.drop_table('album_cover')
    op.drop_table('photo')
    op.drop_table('album_covers')
    op.drop_table('story_image')
    with op.batch_alter_table('image', schema=None) as batch_op:
        batch_op.alter_column('image_url',
               existing_type=sa.VARCHAR(length=500),
               type_=sa.String(length=255),
               existing_nullable=False)
        batch_op.alter_column('story_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_constraint(batch_op.f('image_story_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'story', ['story_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('image', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('image_story_id_fkey'), 'story', ['story_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('story_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('image_url',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=500),
               existing_nullable=False)

    op.create_table('story_image',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('image_url', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('story_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['story_id'], ['story.id'], name=op.f('story_image_story_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('story_image_pkey'))
    )
    op.create_table('album_covers',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('album_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('cover_public_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('album_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('album_covers_pkey')),
    sa.UniqueConstraint('album_name', name=op.f('album_covers_album_name_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('photo',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('album', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('url', sa.VARCHAR(length=512), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('photo_pkey'))
    )
    op.create_table('album_cover',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('album_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('cover_public_id', sa.VARCHAR(length=512), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['album_id'], ['album.id'], name=op.f('album_cover_album_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('album_cover_pkey'))
    )
    op.create_table('stories',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('stories_pkey'))
    )
    # ### end Alembic commands ###
